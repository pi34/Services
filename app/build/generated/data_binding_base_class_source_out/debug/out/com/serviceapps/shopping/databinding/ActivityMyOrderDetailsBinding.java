// Generated by view binder compiler. Do not edit!
package com.serviceapps.shopping.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.serviceapps.shopping.R;
import com.serviceapps.shopping.utils.MSPTextView;
import com.serviceapps.shopping.utils.MSPTextViewBold;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMyOrderDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView rvMyOrderItemsList;

  @NonNull
  public final Toolbar toolbarMyOrderDetailsActivity;

  @NonNull
  public final MSPTextView tvMyOrderDetailsAdditionalNote;

  @NonNull
  public final MSPTextView tvMyOrderDetailsAddress;

  @NonNull
  public final MSPTextView tvMyOrderDetailsAddressType;

  @NonNull
  public final MSPTextViewBold tvMyOrderDetailsFullName;

  @NonNull
  public final MSPTextView tvMyOrderDetailsMobileNumber;

  @NonNull
  public final MSPTextView tvMyOrderDetailsOtherDetails;

  @NonNull
  public final MSPTextView tvOrderDetailsDate;

  @NonNull
  public final MSPTextView tvOrderDetailsId;

  @NonNull
  public final MSPTextView tvOrderDetailsShippingCharge;

  @NonNull
  public final MSPTextView tvOrderDetailsSubTotal;

  @NonNull
  public final MSPTextViewBold tvOrderDetailsTotalAmount;

  @NonNull
  public final MSPTextView tvOrderStatus;

  @NonNull
  public final TextView tvTitle;

  private ActivityMyOrderDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView rvMyOrderItemsList, @NonNull Toolbar toolbarMyOrderDetailsActivity,
      @NonNull MSPTextView tvMyOrderDetailsAdditionalNote,
      @NonNull MSPTextView tvMyOrderDetailsAddress,
      @NonNull MSPTextView tvMyOrderDetailsAddressType,
      @NonNull MSPTextViewBold tvMyOrderDetailsFullName,
      @NonNull MSPTextView tvMyOrderDetailsMobileNumber,
      @NonNull MSPTextView tvMyOrderDetailsOtherDetails, @NonNull MSPTextView tvOrderDetailsDate,
      @NonNull MSPTextView tvOrderDetailsId, @NonNull MSPTextView tvOrderDetailsShippingCharge,
      @NonNull MSPTextView tvOrderDetailsSubTotal,
      @NonNull MSPTextViewBold tvOrderDetailsTotalAmount, @NonNull MSPTextView tvOrderStatus,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.rvMyOrderItemsList = rvMyOrderItemsList;
    this.toolbarMyOrderDetailsActivity = toolbarMyOrderDetailsActivity;
    this.tvMyOrderDetailsAdditionalNote = tvMyOrderDetailsAdditionalNote;
    this.tvMyOrderDetailsAddress = tvMyOrderDetailsAddress;
    this.tvMyOrderDetailsAddressType = tvMyOrderDetailsAddressType;
    this.tvMyOrderDetailsFullName = tvMyOrderDetailsFullName;
    this.tvMyOrderDetailsMobileNumber = tvMyOrderDetailsMobileNumber;
    this.tvMyOrderDetailsOtherDetails = tvMyOrderDetailsOtherDetails;
    this.tvOrderDetailsDate = tvOrderDetailsDate;
    this.tvOrderDetailsId = tvOrderDetailsId;
    this.tvOrderDetailsShippingCharge = tvOrderDetailsShippingCharge;
    this.tvOrderDetailsSubTotal = tvOrderDetailsSubTotal;
    this.tvOrderDetailsTotalAmount = tvOrderDetailsTotalAmount;
    this.tvOrderStatus = tvOrderStatus;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMyOrderDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMyOrderDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_my_order_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMyOrderDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rv_my_order_items_list;
      RecyclerView rvMyOrderItemsList = ViewBindings.findChildViewById(rootView, id);
      if (rvMyOrderItemsList == null) {
        break missingId;
      }

      id = R.id.toolbar_my_order_details_activity;
      Toolbar toolbarMyOrderDetailsActivity = ViewBindings.findChildViewById(rootView, id);
      if (toolbarMyOrderDetailsActivity == null) {
        break missingId;
      }

      id = R.id.tv_my_order_details_additional_note;
      MSPTextView tvMyOrderDetailsAdditionalNote = ViewBindings.findChildViewById(rootView, id);
      if (tvMyOrderDetailsAdditionalNote == null) {
        break missingId;
      }

      id = R.id.tv_my_order_details_address;
      MSPTextView tvMyOrderDetailsAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvMyOrderDetailsAddress == null) {
        break missingId;
      }

      id = R.id.tv_my_order_details_address_type;
      MSPTextView tvMyOrderDetailsAddressType = ViewBindings.findChildViewById(rootView, id);
      if (tvMyOrderDetailsAddressType == null) {
        break missingId;
      }

      id = R.id.tv_my_order_details_full_name;
      MSPTextViewBold tvMyOrderDetailsFullName = ViewBindings.findChildViewById(rootView, id);
      if (tvMyOrderDetailsFullName == null) {
        break missingId;
      }

      id = R.id.tv_my_order_details_mobile_number;
      MSPTextView tvMyOrderDetailsMobileNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvMyOrderDetailsMobileNumber == null) {
        break missingId;
      }

      id = R.id.tv_my_order_details_other_details;
      MSPTextView tvMyOrderDetailsOtherDetails = ViewBindings.findChildViewById(rootView, id);
      if (tvMyOrderDetailsOtherDetails == null) {
        break missingId;
      }

      id = R.id.tv_order_details_date;
      MSPTextView tvOrderDetailsDate = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderDetailsDate == null) {
        break missingId;
      }

      id = R.id.tv_order_details_id;
      MSPTextView tvOrderDetailsId = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderDetailsId == null) {
        break missingId;
      }

      id = R.id.tv_order_details_shipping_charge;
      MSPTextView tvOrderDetailsShippingCharge = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderDetailsShippingCharge == null) {
        break missingId;
      }

      id = R.id.tv_order_details_sub_total;
      MSPTextView tvOrderDetailsSubTotal = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderDetailsSubTotal == null) {
        break missingId;
      }

      id = R.id.tv_order_details_total_amount;
      MSPTextViewBold tvOrderDetailsTotalAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderDetailsTotalAmount == null) {
        break missingId;
      }

      id = R.id.tv_order_status;
      MSPTextView tvOrderStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderStatus == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityMyOrderDetailsBinding((ConstraintLayout) rootView, rvMyOrderItemsList,
          toolbarMyOrderDetailsActivity, tvMyOrderDetailsAdditionalNote, tvMyOrderDetailsAddress,
          tvMyOrderDetailsAddressType, tvMyOrderDetailsFullName, tvMyOrderDetailsMobileNumber,
          tvMyOrderDetailsOtherDetails, tvOrderDetailsDate, tvOrderDetailsId,
          tvOrderDetailsShippingCharge, tvOrderDetailsSubTotal, tvOrderDetailsTotalAmount,
          tvOrderStatus, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
