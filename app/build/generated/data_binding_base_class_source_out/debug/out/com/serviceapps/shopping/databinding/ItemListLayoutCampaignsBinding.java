// Generated by view binder compiler. Do not edit!
package com.serviceapps.shopping.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.serviceapps.shopping.R;
import com.serviceapps.shopping.utils.MSPTextView;
import com.serviceapps.shopping.utils.MSPTextViewBold;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListLayoutCampaignsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton ibDeleteCampaign;

  @NonNull
  public final ImageView ivItemImage;

  @NonNull
  public final LinearLayout llItemImage;

  @NonNull
  public final LinearLayout llProductDetails;

  @NonNull
  public final MSPTextView tvCampaignDescription;

  @NonNull
  public final MSPTextViewBold tvCampaignName;

  private ItemListLayoutCampaignsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton ibDeleteCampaign, @NonNull ImageView ivItemImage,
      @NonNull LinearLayout llItemImage, @NonNull LinearLayout llProductDetails,
      @NonNull MSPTextView tvCampaignDescription, @NonNull MSPTextViewBold tvCampaignName) {
    this.rootView = rootView;
    this.ibDeleteCampaign = ibDeleteCampaign;
    this.ivItemImage = ivItemImage;
    this.llItemImage = llItemImage;
    this.llProductDetails = llProductDetails;
    this.tvCampaignDescription = tvCampaignDescription;
    this.tvCampaignName = tvCampaignName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListLayoutCampaignsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListLayoutCampaignsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_layout_campaigns, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListLayoutCampaignsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ib_delete_campaign;
      ImageButton ibDeleteCampaign = ViewBindings.findChildViewById(rootView, id);
      if (ibDeleteCampaign == null) {
        break missingId;
      }

      id = R.id.iv_item_image;
      ImageView ivItemImage = ViewBindings.findChildViewById(rootView, id);
      if (ivItemImage == null) {
        break missingId;
      }

      id = R.id.ll_item_image;
      LinearLayout llItemImage = ViewBindings.findChildViewById(rootView, id);
      if (llItemImage == null) {
        break missingId;
      }

      id = R.id.ll_product_details;
      LinearLayout llProductDetails = ViewBindings.findChildViewById(rootView, id);
      if (llProductDetails == null) {
        break missingId;
      }

      id = R.id.tv_campaign_description;
      MSPTextView tvCampaignDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvCampaignDescription == null) {
        break missingId;
      }

      id = R.id.tv_campaign_name;
      MSPTextViewBold tvCampaignName = ViewBindings.findChildViewById(rootView, id);
      if (tvCampaignName == null) {
        break missingId;
      }

      return new ItemListLayoutCampaignsBinding((ConstraintLayout) rootView, ibDeleteCampaign,
          ivItemImage, llItemImage, llProductDetails, tvCampaignDescription, tvCampaignName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
