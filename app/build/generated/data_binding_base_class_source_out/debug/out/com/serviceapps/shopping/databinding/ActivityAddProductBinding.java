// Generated by view binder compiler. Do not edit!
package com.serviceapps.shopping.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.serviceapps.shopping.R;
import com.serviceapps.shopping.utils.MSPButton;
import com.serviceapps.shopping.utils.MSPEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddProductBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MSPButton btnSubmit;

  @NonNull
  public final MSPEditText etProductDescription;

  @NonNull
  public final MSPEditText etProductPrice;

  @NonNull
  public final MSPEditText etProductQuantity;

  @NonNull
  public final MSPEditText etProductTitle;

  @NonNull
  public final FrameLayout flProductImage;

  @NonNull
  public final ImageView ivAddUpdateProduct;

  @NonNull
  public final ImageView ivProductImage;

  @NonNull
  public final TextInputLayout tilProductDescription;

  @NonNull
  public final TextInputLayout tilProductPrice;

  @NonNull
  public final TextInputLayout tilProductQuantity;

  @NonNull
  public final TextInputLayout tilProductTitle;

  @NonNull
  public final Toolbar toolbarAddProductActivity;

  @NonNull
  public final TextView tvTitle;

  private ActivityAddProductBinding(@NonNull ConstraintLayout rootView,
      @NonNull MSPButton btnSubmit, @NonNull MSPEditText etProductDescription,
      @NonNull MSPEditText etProductPrice, @NonNull MSPEditText etProductQuantity,
      @NonNull MSPEditText etProductTitle, @NonNull FrameLayout flProductImage,
      @NonNull ImageView ivAddUpdateProduct, @NonNull ImageView ivProductImage,
      @NonNull TextInputLayout tilProductDescription, @NonNull TextInputLayout tilProductPrice,
      @NonNull TextInputLayout tilProductQuantity, @NonNull TextInputLayout tilProductTitle,
      @NonNull Toolbar toolbarAddProductActivity, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnSubmit = btnSubmit;
    this.etProductDescription = etProductDescription;
    this.etProductPrice = etProductPrice;
    this.etProductQuantity = etProductQuantity;
    this.etProductTitle = etProductTitle;
    this.flProductImage = flProductImage;
    this.ivAddUpdateProduct = ivAddUpdateProduct;
    this.ivProductImage = ivProductImage;
    this.tilProductDescription = tilProductDescription;
    this.tilProductPrice = tilProductPrice;
    this.tilProductQuantity = tilProductQuantity;
    this.tilProductTitle = tilProductTitle;
    this.toolbarAddProductActivity = toolbarAddProductActivity;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_submit;
      MSPButton btnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.et_product_description;
      MSPEditText etProductDescription = ViewBindings.findChildViewById(rootView, id);
      if (etProductDescription == null) {
        break missingId;
      }

      id = R.id.et_product_price;
      MSPEditText etProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (etProductPrice == null) {
        break missingId;
      }

      id = R.id.et_product_quantity;
      MSPEditText etProductQuantity = ViewBindings.findChildViewById(rootView, id);
      if (etProductQuantity == null) {
        break missingId;
      }

      id = R.id.et_product_title;
      MSPEditText etProductTitle = ViewBindings.findChildViewById(rootView, id);
      if (etProductTitle == null) {
        break missingId;
      }

      id = R.id.fl_product_image;
      FrameLayout flProductImage = ViewBindings.findChildViewById(rootView, id);
      if (flProductImage == null) {
        break missingId;
      }

      id = R.id.iv_add_update_product;
      ImageView ivAddUpdateProduct = ViewBindings.findChildViewById(rootView, id);
      if (ivAddUpdateProduct == null) {
        break missingId;
      }

      id = R.id.iv_product_image;
      ImageView ivProductImage = ViewBindings.findChildViewById(rootView, id);
      if (ivProductImage == null) {
        break missingId;
      }

      id = R.id.til_product_description;
      TextInputLayout tilProductDescription = ViewBindings.findChildViewById(rootView, id);
      if (tilProductDescription == null) {
        break missingId;
      }

      id = R.id.til_product_price;
      TextInputLayout tilProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (tilProductPrice == null) {
        break missingId;
      }

      id = R.id.til_product_quantity;
      TextInputLayout tilProductQuantity = ViewBindings.findChildViewById(rootView, id);
      if (tilProductQuantity == null) {
        break missingId;
      }

      id = R.id.til_product_title;
      TextInputLayout tilProductTitle = ViewBindings.findChildViewById(rootView, id);
      if (tilProductTitle == null) {
        break missingId;
      }

      id = R.id.toolbar_add_product_activity;
      Toolbar toolbarAddProductActivity = ViewBindings.findChildViewById(rootView, id);
      if (toolbarAddProductActivity == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityAddProductBinding((ConstraintLayout) rootView, btnSubmit,
          etProductDescription, etProductPrice, etProductQuantity, etProductTitle, flProductImage,
          ivAddUpdateProduct, ivProductImage, tilProductDescription, tilProductPrice,
          tilProductQuantity, tilProductTitle, toolbarAddProductActivity, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
