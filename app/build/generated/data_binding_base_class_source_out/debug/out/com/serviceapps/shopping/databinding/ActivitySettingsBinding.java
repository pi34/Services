// Generated by view binder compiler. Do not edit!
package com.serviceapps.shopping.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.serviceapps.shopping.R;
import com.serviceapps.shopping.utils.MSPButton;
import com.serviceapps.shopping.utils.MSPTextView;
import com.serviceapps.shopping.utils.MSPTextViewBold;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MSPButton btnLogout;

  @NonNull
  public final FrameLayout flHeaderBg;

  @NonNull
  public final FrameLayout flUserImage;

  @NonNull
  public final ImageView ivHeaderBg;

  @NonNull
  public final ImageView ivUserPhoto;

  @NonNull
  public final LinearLayout llAddress;

  @NonNull
  public final Toolbar toolbarSettingsActivity;

  @NonNull
  public final MSPTextView tvEdit;

  @NonNull
  public final MSPTextView tvEmail;

  @NonNull
  public final MSPTextView tvGender;

  @NonNull
  public final MSPTextView tvMobileNumber;

  @NonNull
  public final MSPTextViewBold tvName;

  @NonNull
  public final TextView tvTitle;

  private ActivitySettingsBinding(@NonNull ScrollView rootView, @NonNull MSPButton btnLogout,
      @NonNull FrameLayout flHeaderBg, @NonNull FrameLayout flUserImage,
      @NonNull ImageView ivHeaderBg, @NonNull ImageView ivUserPhoto,
      @NonNull LinearLayout llAddress, @NonNull Toolbar toolbarSettingsActivity,
      @NonNull MSPTextView tvEdit, @NonNull MSPTextView tvEmail, @NonNull MSPTextView tvGender,
      @NonNull MSPTextView tvMobileNumber, @NonNull MSPTextViewBold tvName,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnLogout = btnLogout;
    this.flHeaderBg = flHeaderBg;
    this.flUserImage = flUserImage;
    this.ivHeaderBg = ivHeaderBg;
    this.ivUserPhoto = ivUserPhoto;
    this.llAddress = llAddress;
    this.toolbarSettingsActivity = toolbarSettingsActivity;
    this.tvEdit = tvEdit;
    this.tvEmail = tvEmail;
    this.tvGender = tvGender;
    this.tvMobileNumber = tvMobileNumber;
    this.tvName = tvName;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_logout;
      MSPButton btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.fl_header_bg;
      FrameLayout flHeaderBg = ViewBindings.findChildViewById(rootView, id);
      if (flHeaderBg == null) {
        break missingId;
      }

      id = R.id.fl_user_image;
      FrameLayout flUserImage = ViewBindings.findChildViewById(rootView, id);
      if (flUserImage == null) {
        break missingId;
      }

      id = R.id.iv_header_bg;
      ImageView ivHeaderBg = ViewBindings.findChildViewById(rootView, id);
      if (ivHeaderBg == null) {
        break missingId;
      }

      id = R.id.iv_user_photo;
      ImageView ivUserPhoto = ViewBindings.findChildViewById(rootView, id);
      if (ivUserPhoto == null) {
        break missingId;
      }

      id = R.id.ll_address;
      LinearLayout llAddress = ViewBindings.findChildViewById(rootView, id);
      if (llAddress == null) {
        break missingId;
      }

      id = R.id.toolbar_settings_activity;
      Toolbar toolbarSettingsActivity = ViewBindings.findChildViewById(rootView, id);
      if (toolbarSettingsActivity == null) {
        break missingId;
      }

      id = R.id.tv_edit;
      MSPTextView tvEdit = ViewBindings.findChildViewById(rootView, id);
      if (tvEdit == null) {
        break missingId;
      }

      id = R.id.tv_email;
      MSPTextView tvEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvEmail == null) {
        break missingId;
      }

      id = R.id.tv_gender;
      MSPTextView tvGender = ViewBindings.findChildViewById(rootView, id);
      if (tvGender == null) {
        break missingId;
      }

      id = R.id.tv_mobile_number;
      MSPTextView tvMobileNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvMobileNumber == null) {
        break missingId;
      }

      id = R.id.tv_name;
      MSPTextViewBold tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ScrollView) rootView, btnLogout, flHeaderBg, flUserImage,
          ivHeaderBg, ivUserPhoto, llAddress, toolbarSettingsActivity, tvEdit, tvEmail, tvGender,
          tvMobileNumber, tvName, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
