// Generated by view binder compiler. Do not edit!
package com.serviceapps.shopping.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.serviceapps.shopping.R;
import com.serviceapps.shopping.utils.MSPButton;
import com.serviceapps.shopping.utils.MSPEditText;
import com.serviceapps.shopping.utils.MSPTextView;
import com.serviceapps.shopping.utils.MSPTextViewBold;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MSPButton btnLogin;

  @NonNull
  public final MSPEditText etEmail;

  @NonNull
  public final MSPEditText etPassword;

  @NonNull
  public final FrameLayout flHeaderImage;

  @NonNull
  public final TextInputLayout tilEmail;

  @NonNull
  public final TextInputLayout tilPassword;

  @NonNull
  public final MSPTextView tvDonTHaveAnAccount;

  @NonNull
  public final MSPTextView tvForgotPassword;

  @NonNull
  public final MSPTextViewBold tvRegister;

  @NonNull
  public final MSPTextViewBold tvTitle;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull MSPButton btnLogin,
      @NonNull MSPEditText etEmail, @NonNull MSPEditText etPassword,
      @NonNull FrameLayout flHeaderImage, @NonNull TextInputLayout tilEmail,
      @NonNull TextInputLayout tilPassword, @NonNull MSPTextView tvDonTHaveAnAccount,
      @NonNull MSPTextView tvForgotPassword, @NonNull MSPTextViewBold tvRegister,
      @NonNull MSPTextViewBold tvTitle) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.etEmail = etEmail;
    this.etPassword = etPassword;
    this.flHeaderImage = flHeaderImage;
    this.tilEmail = tilEmail;
    this.tilPassword = tilPassword;
    this.tvDonTHaveAnAccount = tvDonTHaveAnAccount;
    this.tvForgotPassword = tvForgotPassword;
    this.tvRegister = tvRegister;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_login;
      MSPButton btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.et_email;
      MSPEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.et_password;
      MSPEditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.fl_header_image;
      FrameLayout flHeaderImage = ViewBindings.findChildViewById(rootView, id);
      if (flHeaderImage == null) {
        break missingId;
      }

      id = R.id.til_email;
      TextInputLayout tilEmail = ViewBindings.findChildViewById(rootView, id);
      if (tilEmail == null) {
        break missingId;
      }

      id = R.id.til_password;
      TextInputLayout tilPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilPassword == null) {
        break missingId;
      }

      id = R.id.tv_don_t_have_an_account;
      MSPTextView tvDonTHaveAnAccount = ViewBindings.findChildViewById(rootView, id);
      if (tvDonTHaveAnAccount == null) {
        break missingId;
      }

      id = R.id.tv_forgot_password;
      MSPTextView tvForgotPassword = ViewBindings.findChildViewById(rootView, id);
      if (tvForgotPassword == null) {
        break missingId;
      }

      id = R.id.tv_register;
      MSPTextViewBold tvRegister = ViewBindings.findChildViewById(rootView, id);
      if (tvRegister == null) {
        break missingId;
      }

      id = R.id.tv_title;
      MSPTextViewBold tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, btnLogin, etEmail, etPassword,
          flHeaderImage, tilEmail, tilPassword, tvDonTHaveAnAccount, tvForgotPassword, tvRegister,
          tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
